---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=Sike you thought&page=1&query=Nothing
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - Sike you thought
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 23 May 2022 17:41:07 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 a5bffe3d9fb1379dc2d31313b684f3b6.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-C1
      X-Amz-Cf-Id:
      - QUI9CvWp6wG0DRaLHSt1X77VyrA2sCPzZBoAbkCbfb2KLI-ojXyfnA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 23 May 2022 17:41:07 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=Sike you thought&page=2&query=Nothing
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - Sike you thought
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 23 May 2022 17:41:07 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 3f7e5e686bf8f19b9c786efbe99c7588.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-C1
      X-Amz-Cf-Id:
      - G4FtCnriiRh5rFzQIB8WPr4vkyyYdI8t3mIyko_fU6gTSS8_ApiUag==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 23 May 2022 17:41:07 GMT
recorded_with: VCR 6.1.0
